# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: npm release

on:
  push:
    branches:
      - release

jobs:
  publish-gpr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
          scope: '@lapras-inc'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: build node package
        run: yarn build
      - name: Github config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: commit dist
        run: |
          git add -A
          git commit -m 'chore: add dist'
      - name: Version increment
        run: yarn release
      - name: Get package-version
        id: package-version
        run: echo "::set-output name=package_version::v$(node -p "require('./package.json').version")"
      - name: GitHub Push
        uses: ad-m/github-push-action@v0.6.0
        with:
          branch: release
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.package-version.outputs.package_version }}
          release_name: Release ${{ steps.package-version.outputs.package_version }}
      - name: deploy github package registry
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
